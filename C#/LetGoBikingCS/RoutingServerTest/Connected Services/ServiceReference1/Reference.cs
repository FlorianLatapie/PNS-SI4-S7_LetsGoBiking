//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RoutingServerTest.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISimpleCalculator")]
    public interface ISimpleCalculator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleCalculator/Add", ReplyAction="http://tempuri.org/ISimpleCalculator/AddResponse")]
        int Add(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleCalculator/Add", ReplyAction="http://tempuri.org/ISimpleCalculator/AddResponse")]
        System.Threading.Tasks.Task<int> AddAsync(int num1, int num2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISimpleCalculatorChannel : RoutingServerTest.ServiceReference1.ISimpleCalculator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SimpleCalculatorClient : System.ServiceModel.ClientBase<RoutingServerTest.ServiceReference1.ISimpleCalculator>, RoutingServerTest.ServiceReference1.ISimpleCalculator {
        
        public SimpleCalculatorClient() {
        }
        
        public SimpleCalculatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SimpleCalculatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimpleCalculatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimpleCalculatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Add(int num1, int num2) {
            return base.Channel.Add(num1, num2);
        }
        
        public System.Threading.Tasks.Task<int> AddAsync(int num1, int num2) {
            return base.Channel.AddAsync(num1, num2);
        }
    }
}
